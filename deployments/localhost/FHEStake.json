{
  "address": "0xa6111e24F7C65a30f7c0E1eF23c91AA2f47d368a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "RewardRateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "setRewardRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x42f4a2969e1cc3b585ecec582a237290f83e6d2e119c960cceb4ca0848fb4dce",
  "receipt": {
    "to": null,
    "from": "0xAb6A4662C5Ad15c84db64249186EA6630b06e7f9",
    "contractAddress": "0xa6111e24F7C65a30f7c0E1eF23c91AA2f47d368a",
    "transactionIndex": 0,
    "gasUsed": "604771",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb909d73be96161ee4484a272fe7030245ba0c2e5bc93e2bb48282aeec552870c",
    "transactionHash": "0x42f4a2969e1cc3b585ecec582a237290f83e6d2e119c960cceb4ca0848fb4dce",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "604771",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "1bfe7f1f747a14835be34050f51e06a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RewardRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Simple ETH Staking with Rewards (Sepolia)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Claim ETH rewards\"},\"exit()\":{\"notice\":\"Withdraw stake + claim rewards\"},\"setRewardRate(uint256)\":{\"notice\":\"Owner can change reward rate\"},\"stake()\":{\"notice\":\"Stake native ETH\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ETH\"}},\"notice\":\"Users can stake native ETH, earn ETH rewards over time, and withdraw\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FHEStake.sol\":\"FHEStake\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/FHEStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title Simple ETH Staking with Rewards (Sepolia)\\n/// @notice Users can stake native ETH, earn ETH rewards over time, and withdraw\\ncontract FHEStake {\\n    uint256 public rewardRate; // wei rewarded per second per wei staked\\n    uint256 public lastUpdateTime;\\n    uint256 public rewardPerTokenStored;\\n\\n    mapping(address => uint256) public userRewardPerTokenPaid;\\n    mapping(address => uint256) public rewards;\\n    mapping(address => uint256) public balances;\\n\\n    uint256 private _totalSupply;\\n    address public owner;\\n\\n    event Staked(address indexed user, uint256 amount);\\n    event Withdrawn(address indexed user, uint256 amount);\\n    event RewardPaid(address indexed user, uint256 reward);\\n    event RewardRateChanged(uint256 newRate);\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not owner\\\");\\n        _;\\n    }\\n\\n    modifier updateReward(address account) {\\n        rewardPerTokenStored = rewardPerToken();\\n        lastUpdateTime = block.timestamp;\\n        if (account != address(0)) {\\n            rewards[account] = earned(account);\\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\\n        }\\n        _;\\n    }\\n\\n    constructor(uint256 _rewardRate) {\\n        owner = msg.sender;\\n        rewardRate = _rewardRate;\\n        lastUpdateTime = block.timestamp;\\n    }\\n\\n    function rewardPerToken() public view returns (uint256) {\\n        if (_totalSupply == 0) {\\n            return rewardPerTokenStored;\\n        }\\n        return rewardPerTokenStored + ((block.timestamp - lastUpdateTime) * rewardRate * 1e18) / _totalSupply;\\n    }\\n\\n    function earned(address account) public view returns (uint256) {\\n        return (balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18 + rewards[account];\\n    }\\n\\n    /// @notice Stake native ETH\\n    function stake() external payable updateReward(msg.sender) {\\n        require(msg.value > 0, \\\"Cannot stake 0\\\");\\n        _totalSupply += msg.value;\\n        balances[msg.sender] += msg.value;\\n        emit Staked(msg.sender, msg.value);\\n    }\\n\\n    /// @notice Withdraw staked ETH\\n    function withdraw(uint256 amount) public updateReward(msg.sender) {\\n        require(amount > 0, \\\"Cannot withdraw 0\\\");\\n        require(balances[msg.sender] >= amount, \\\"Not enough staked\\\");\\n        _totalSupply -= amount;\\n        balances[msg.sender] -= amount;\\n        payable(msg.sender).transfer(amount);\\n        emit Withdrawn(msg.sender, amount);\\n    }\\n\\n    /// @notice Claim ETH rewards\\n    function claimReward() public updateReward(msg.sender) {\\n        uint256 reward = rewards[msg.sender];\\n        if (reward > 0) {\\n            rewards[msg.sender] = 0;\\n            payable(msg.sender).transfer(reward);\\n            emit RewardPaid(msg.sender, reward);\\n        }\\n    }\\n\\n    /// @notice Withdraw stake + claim rewards\\n    function exit() external {\\n        withdraw(balances[msg.sender]);\\n        claimReward();\\n    }\\n\\n    /// @notice Owner can change reward rate\\n    function setRewardRate(uint256 _rate) external onlyOwner updateReward(address(0)) {\\n        rewardRate = _rate;\\n        emit RewardRateChanged(_rate);\\n    }\\n\\n    /// @notice Contract can receive ETH (to fund rewards)\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x22cebb8e50e6c822df2e591adca56d5738e4611da1e8ec1a1193e42a585a069c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600e575f5ffd5b5060405161092a38038061092a833981016040819052602b916047565b600780546001600160a01b031916331790555f5542600155605d565b5f602082840312156056575f5ffd5b5051919050565b6108c08061006a5f395ff3fe6080604052600436106100db575f3560e01c80638da5cb5b1161007c578063c8f33c9111610057578063c8f33c9114610240578063cd3daf9d14610255578063df136d6514610269578063e9fad8ee1461027e575f5ffd5b80638da5cb5b146101d65780639e447fc61461020d578063b88a802f1461022c575f5ffd5b80632e1a7d4d116100b75780632e1a7d4d1461016e5780633a4b66f11461018f5780637b0a47ee146101975780638b876347146101ab575f5ffd5b80628cc262146100e65780630700037d1461011857806327e235e314610143575f5ffd5b366100e257005b5f5ffd5b3480156100f1575f5ffd5b506101056101003660046107ff565b610292565b6040519081526020015b60405180910390f35b348015610123575f5ffd5b506101056101323660046107ff565b60046020525f908152604090205481565b34801561014e575f5ffd5b5061010561015d3660046107ff565b60056020525f908152604090205481565b348015610179575f5ffd5b5061018d61018836600461082c565b61030d565b005b61018d6104b0565b3480156101a2575f5ffd5b506101055f5481565b3480156101b6575f5ffd5b506101056101c53660046107ff565b60036020525f908152604090205481565b3480156101e1575f5ffd5b506007546101f5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b348015610218575f5ffd5b5061018d61022736600461082c565b6105c3565b348015610237575f5ffd5b5061018d6106ab565b34801561024b575f5ffd5b5061010560015481565b348015610260575f5ffd5b50610105610782565b348015610274575f5ffd5b5061010560025481565b348015610289575f5ffd5b5061018d6107dd565b6001600160a01b0381165f908152600460209081526040808320546003909252822054670de0b6b3a7640000906102c7610782565b6102d19190610857565b6001600160a01b0385165f908152600560205260409020546102f3919061086a565b6102fd9190610881565b61030791906108a0565b92915050565b33610316610782565b600255426001556001600160a01b038116156103605761033581610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f82116103b45760405162461bcd60e51b815260206004820152601160248201527f43616e6e6f74207769746864726177203000000000000000000000000000000060448201526064015b60405180910390fd5b335f908152600560205260409020548211156104125760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f756768207374616b656400000000000000000000000000000060448201526064016103ab565b8160065f8282546104239190610857565b9091555050335f9081526005602052604081208054849290610446908490610857565b9091555050604051339083156108fc029084905f818181858888f19350505050158015610475573d5f5f3e3d5ffd5b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b336104b9610782565b600255426001556001600160a01b03811615610503576104d881610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f34116105525760405162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b65203000000000000000000000000000000000000060448201526064016103ab565b3460065f82825461056391906108a0565b9091555050335f90815260056020526040812080543492906105869084906108a0565b909155505060405134815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a250565b6007546001600160a01b0316331461061d5760405162461bcd60e51b815260206004820152600960248201527f4e6f74206f776e6572000000000000000000000000000000000000000000000060448201526064016103ab565b5f610626610782565b600255426001556001600160a01b038116156106705761064581610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f8290556040518281527f1e3be2efa25bca5bff2215c7b30b31086e703d6aa7d9b9a1f8ba62c5291219ad9060200160405180910390a15050565b336106b4610782565b600255426001556001600160a01b038116156106fe576106d381610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b335f90815260046020526040902054801561077e57335f818152600460205260408082208290555183156108fc0291849190818181858888f1935050505015801561074b573d5f5f3e3d5ffd5b5060405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020016104a4565b5050565b5f6006545f03610793575060025490565b6006545f546001546107a59042610857565b6107af919061086a565b6107c190670de0b6b3a764000061086a565b6107cb9190610881565b6002546107d891906108a0565b905090565b335f908152600560205260409020546107f59061030d565b6107fd6106ab565b565b5f6020828403121561080f575f5ffd5b81356001600160a01b0381168114610825575f5ffd5b9392505050565b5f6020828403121561083c575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561030757610307610843565b808202811582820484141761030757610307610843565b5f8261089b57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156103075761030761084356fea164736f6c634300081b000a",
  "deployedBytecode": "0x6080604052600436106100db575f3560e01c80638da5cb5b1161007c578063c8f33c9111610057578063c8f33c9114610240578063cd3daf9d14610255578063df136d6514610269578063e9fad8ee1461027e575f5ffd5b80638da5cb5b146101d65780639e447fc61461020d578063b88a802f1461022c575f5ffd5b80632e1a7d4d116100b75780632e1a7d4d1461016e5780633a4b66f11461018f5780637b0a47ee146101975780638b876347146101ab575f5ffd5b80628cc262146100e65780630700037d1461011857806327e235e314610143575f5ffd5b366100e257005b5f5ffd5b3480156100f1575f5ffd5b506101056101003660046107ff565b610292565b6040519081526020015b60405180910390f35b348015610123575f5ffd5b506101056101323660046107ff565b60046020525f908152604090205481565b34801561014e575f5ffd5b5061010561015d3660046107ff565b60056020525f908152604090205481565b348015610179575f5ffd5b5061018d61018836600461082c565b61030d565b005b61018d6104b0565b3480156101a2575f5ffd5b506101055f5481565b3480156101b6575f5ffd5b506101056101c53660046107ff565b60036020525f908152604090205481565b3480156101e1575f5ffd5b506007546101f5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b348015610218575f5ffd5b5061018d61022736600461082c565b6105c3565b348015610237575f5ffd5b5061018d6106ab565b34801561024b575f5ffd5b5061010560015481565b348015610260575f5ffd5b50610105610782565b348015610274575f5ffd5b5061010560025481565b348015610289575f5ffd5b5061018d6107dd565b6001600160a01b0381165f908152600460209081526040808320546003909252822054670de0b6b3a7640000906102c7610782565b6102d19190610857565b6001600160a01b0385165f908152600560205260409020546102f3919061086a565b6102fd9190610881565b61030791906108a0565b92915050565b33610316610782565b600255426001556001600160a01b038116156103605761033581610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f82116103b45760405162461bcd60e51b815260206004820152601160248201527f43616e6e6f74207769746864726177203000000000000000000000000000000060448201526064015b60405180910390fd5b335f908152600560205260409020548211156104125760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f756768207374616b656400000000000000000000000000000060448201526064016103ab565b8160065f8282546104239190610857565b9091555050335f9081526005602052604081208054849290610446908490610857565b9091555050604051339083156108fc029084905f818181858888f19350505050158015610475573d5f5f3e3d5ffd5b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b336104b9610782565b600255426001556001600160a01b03811615610503576104d881610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f34116105525760405162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b65203000000000000000000000000000000000000060448201526064016103ab565b3460065f82825461056391906108a0565b9091555050335f90815260056020526040812080543492906105869084906108a0565b909155505060405134815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a250565b6007546001600160a01b0316331461061d5760405162461bcd60e51b815260206004820152600960248201527f4e6f74206f776e6572000000000000000000000000000000000000000000000060448201526064016103ab565b5f610626610782565b600255426001556001600160a01b038116156106705761064581610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b5f8290556040518281527f1e3be2efa25bca5bff2215c7b30b31086e703d6aa7d9b9a1f8ba62c5291219ad9060200160405180910390a15050565b336106b4610782565b600255426001556001600160a01b038116156106fe576106d381610292565b6001600160a01b0382165f908152600460209081526040808320939093556002546003909152919020555b335f90815260046020526040902054801561077e57335f818152600460205260408082208290555183156108fc0291849190818181858888f1935050505015801561074b573d5f5f3e3d5ffd5b5060405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020016104a4565b5050565b5f6006545f03610793575060025490565b6006545f546001546107a59042610857565b6107af919061086a565b6107c190670de0b6b3a764000061086a565b6107cb9190610881565b6002546107d891906108a0565b905090565b335f908152600560205260409020546107f59061030d565b6107fd6106ab565b565b5f6020828403121561080f575f5ffd5b81356001600160a01b0381168114610825575f5ffd5b9392505050565b5f6020828403121561083c575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561030757610307610843565b808202811582820484141761030757610307610843565b5f8261089b57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156103075761030761084356fea164736f6c634300081b000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Simple ETH Staking with Rewards (Sepolia)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimReward()": {
        "notice": "Claim ETH rewards"
      },
      "exit()": {
        "notice": "Withdraw stake + claim rewards"
      },
      "setRewardRate(uint256)": {
        "notice": "Owner can change reward rate"
      },
      "stake()": {
        "notice": "Stake native ETH"
      },
      "withdraw(uint256)": {
        "notice": "Withdraw staked ETH"
      }
    },
    "notice": "Users can stake native ETH, earn ETH rewards over time, and withdraw",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "rewardRate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 6,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "lastUpdateTime",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "rewardPerTokenStored",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "userRewardPerTokenPaid",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "rewards",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 22,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 24,
        "contract": "contracts/FHEStake.sol:FHEStake",
        "label": "owner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}